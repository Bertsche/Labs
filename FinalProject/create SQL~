DROP TABLE IF EXISTS defenseStats;
DROP TABLE IF EXISTS offenseStats;
DROP TABLE IF EXISTS kickerStats;
DROP TABLE IF EXISTS games;
DROP TABLE IF EXISTS currentRosters;
DROP TABLE IF EXISTS matchups;
DROP TABLE IF EXISTS fantasyRosters;
DROP TABLE IF EXISTS teams;
DROP TABLE IF EXISTS players;
DROP TABLE IF EXISTS pointValues;
DROP TABLE IF EXISTS fantasyTeamOwners;
DROP TABLE IF EXISTS fantasyTeams;
DROP TABLE IF EXISTS fantasyLeagues;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS timePeriod;


CREATE TABLE users
(
	emailAddress	 varchar(50)	NOT NULL PRIMARY KEY,
	firstName		 text			NOT NULL,
	lastName		 text			NOT NULL,
	thePassword		 text			NOT NULL
);
--emailAddress -> firstName, lastName, thePassword

CREATE TABLE fantasyLeagues
(
	leagueID		int				NOT NULL PRIMARY KEY,
	commissioner	varchar(50)		NOT NULL REFERENCES users(emailAddress),
	leagueName		text			NOT NULL
);
--leagueID -> commissioner, leagueName

CREATE TABLE fantasyTeams
(
	teamID			int				NOT NULL PRIMARY KEY,
	leagueID		int				NOT NULL REFERENCES fantasyLeagues(leagueID),
	teamName		text			NOT NULL
);
--(teamID, leagueID) -> teamName

CREATE TABLE fantasyTeamOwners
(
	emailAddress	varchar(50)		NOT NULL REFERENCES users(emailAddress),
	teamID			int				NOT NULL REFERENCES fantasyTeams(teamID),
PRIMARY KEY(emailAddress, teamID)
);
--(emailAddress, teamID) ->

CREATE TABLE timePeriod
(
	weekNumber		int				NOT NULL PRIMARY KEY,
	startDate		date			NOT NULL UNIQUE,
	endDate			date			NOT NULL UNIQUE
);
--weekNumber -> startDate, endDate

CREATE TABLE teams
(
	teamName		text			NOT NULL PRIMARY KEY,
	location		text			NOT NULL,
	abbreviation	varchar(3)		NOT NULL UNIQUE
);
--teamName -> location, abbreviation

CREATE TABLE players
(
	playerID		int				NOT NULL PRIMARY KEY,
	name			text			NOT NULL,
	jerseyNumber		int			NOT NULL,
	position		text			NOT NULL CHECK
		(position in ('QB', 'WR', 'TE', 'RB', 'K', 'D'))
);
--playerID -> name, jerseyNumber, position

CREATE TABLE games
(
	awayTeam		text			NOT NULL REFERENCES teams(teamName),
	homeTeam		text			NOT NULL REFERENCES teams(teamName),
	week			int				NOT NULL REFERENCES timePeriod(weekNumber),
PRIMARY KEY(awayTeam, homeTeam, week)
);
--(awayTeam, homeTeam, week) ->

CREATE TABLE defenseStats
(
	awayTeam		text			NOT NULL,
	homeTeam		text			NOT NULL,
	week			int				NOT NULL,
	playerID		int				NOT NULL REFERENCES players(playerID),
	pointsAllowed	int				NOT NULL DEFAULT 0,
	sacks			int				NOT NULL DEFAULT 0,
	interceptions	int				NOT NULL DEFAULT 0,
	fumbleRecoveries int				NOT NULL DEFAULT 0,
	touchdowns		int				NOT NULL DEFAULT 0,
	passingYards	int				NOT NULL DEFAULT 0,
	rushingYards	int				NOT NULL DEFAULT 0,
	fgBlocked		int				NOT NULL DEFAULT 0,
	puntBlocked		int				NOT NULL DEFAULT 0,
FOREIGN KEY(awayTeam, homeTeam, week) REFERENCES games(awayTeam, homeTeam, week),
PRIMARY KEY(awayTeam, homeTeam, week, playerID)
);
--(awayTeam, homeTeam, week, playerID) -> pointsAllowed, sack, interceptions, fumbleRecoveries, touchdowns, passingYards, RushingYards, fgBlocked, puntBlocked

CREATE TABLE offenseStats
(
	awayTeam		text			NOT NULL,
	homeTeam		text			NOT NULL,
	week			int				NOT NULL,
	playerID		int				NOT NULL REFERENCES players(playerID),
	passAttempts	int				NOT NULL DEFAULT 0,
	passCompletions	int				NOT NULL DEFAULT 0,
	passYards		int				NOT NULL DEFAULT 0,
	passTDs			int				NOT NULL DEFAULT 0,
	interceptions	int				NOT NULL DEFAULT 0,
	timesSacked		int				NOT NULL DEFAULT 0,
	rushAttempts	int				NOT NULL DEFAULT 0,
	rushYards		int				NOT NULL DEFAULT 0,
	rushTDs			int				NOT NULL DEFAULT 0,
	receptions		int				NOT NULL DEFAULT 0,
	receptionYards	int				NOT NULL DEFAULT 0,
	receptionTDs	int				NOT NULL DEFAULT 0,	
FOREIGN KEY(awayTeam, homeTeam, week) REFERENCES games(awayTeam, homeTeam, week),
PRIMARY KEY(awayTeam, homeTeam, week, playerID)
);
--(awayTeam, homeTeam, week, playerID) -> passAttempts, passCompletions, passYards, passTDs, interceptions, timesSacked, rushAttempts, rushYards, rushTDs, receptions, receptionYards, receptionTDs

CREATE TABLE kickerStats
(
	awayTeam		text			NOT NULL,
	homeTeam		text			NOT NULL,
	week			int				NOT NULL,
	playerID		int				NOT NULL REFERENCES players(playerID),
	pats			int				NOT NULL DEFAULT 0,
	fgZeroToThirty int				NOT NULL DEFAULT 0,
	fgThirtyToFourty int			NOT NULL DEFAULT 0,
	fgFourtyToFifty	int				NOT NULL DEFAULT 0,
	fgFiftyPlus		int				NOT NULL DEFAULT 0,
FOREIGN KEY(awayTeam, homeTeam, week) REFERENCES games(awayTeam, homeTeam, week),
PRIMARY KEY(awayTeam, homeTeam, week, playerID)
);
--(awayTeam, homeTeam, week, playerID) -> pats, fgZeroToThrirty, fgThirtyToFourty, fgFourtyToFifty, fgFiftyPlus

CREATE TABLE currentRosters
(
	playerId		int				NOT NULL REFERENCES players(playerID),
	teamName		text			NOT NULL REFERENCES teams(teamName),
	timePeriod		int			NOT NULL REFERENCES timePeriod(weekNumber),
PRIMARY KEY(playerID, teamName, timePeriod)
);
--(playerID, teamName, timePeriod) ->

CREATE TABLE matchups
(
	week			int				NOT NULL REFERENCES timePeriod(weekNumber),
	homeTeamID		int				NOT NULL REFERENCES fantasyTeams(teamID),
	awayTeamID		int				NOT NULL REFERENCES fantasyTeams(teamID),
PRIMARY KEY(week, homeTeamID, awayTeamID)
);
--(week, homeTeamID, awayTeamID) ->

CREATE TABLE fantasyRosters
(
	playerID		int				NOT NULL REFERENCES players(playerID),
	teamID			int				NOT NULL REFERENCES fantasyTeams(teamID),
	week			int				NOT NULL REFERENCES timePeriod(weekNumber),
PRIMARY KEY(playerID, teamID, week)
);
--(playerID, teamID, week) -> 

CREATE TABLE pointValues
(
	leagueID			numeric				NOT NULL PRIMARY KEY,
	pointsAllowed		numeric				NOT NULL DEFAULT -.25,
	dSacks				numeric				NOT NULL DEFAULT 1.5,
	dInterceptions		numeric				NOT NULL DEFAULT 2,
	fumbleRecoveries	numeric				NOT NULL DEFAULT 2,
	dTouchdowns			numeric				NOT NULL DEFAULT 6,
	dPassingYards		numeric				NOT NULL DEFAULT -.01,
	dRushingYards		numeric				NOT NULL DEFAULT -.01,
	fgBlocked			numeric				NOT NULL DEFAULT 3,
	puntBlocked			numeric				NOT NULL DEFAULT 3,
	passAttempts		numeric				NOT NULL DEFAULT .5,
	passCompletions		numeric				NOT NULL DEFAULT 1,
	passYards			numeric				NOT NULL DEFAULT .02,
	passTDs				numeric				NOT NULL DEFAULT 6,
	interceptions		numeric				NOT NULL DEFAULT -2,
	timesSacked			numeric				NOT NULL DEFAULT -1,
	rushAttempts		numeric				NOT NULL DEFAULT 1,
	rushYards			numeric				NOT NULL DEFAULT .05,
	rushTDs				numeric				NOT NULL DEFAULT 6,
	receptions			numeric				NOT NULL DEFAULT 1,
	receptionYards		numeric				NOT NULL DEFAULT .05,
	receptionTDs		numeric				NOT NULL DEFAULT 6,
	pats				numeric				NOT NULL DEFAULT 1,
	fgZeroToThirty		numeric				NOT NULL DEFAULT 2,
	fgThirtyToFourty	numeric				NOT NULL DEFAULT 3,
	fgFourtyToFifty		numeric				NOT NULL DEFAULT 4,
	fgFiftyPlus			numeric				NOT NULL DEFAULT 5
);
--leagueID - > pointsAllowed,dSacks,dInterceptions,fumbleRecoveries,dTouchdowns,
--dPassingYards,dRushingYards,fgBlocked,puntBlocked,passAttempts,
--passCompletions,passYards,passTDs,interceptions,timesSacked,rushAttempts,
--rushYards,rushTDs,receptions,receptionYards,receptionTDs,pats,
--fgZeroToThirty,fgThirtyToFourty,fgFourtyToFifty,fgFiftyPlus




--DROP VIEW fantasyfreeagents
DROP FUNCTION getfreeagents(integer,integer)

CREATE OR REPLACE FUNCTION getFreeAgents(theLeagueID INTEGER, theWeek INTEGER) RETURNS TABLE (player text, thePosition text) AS $$
	DECLARE
		previous_week INTEGER;
	BEGIN

	IF 
		theWeek = 1
	THEN
		previous_week := 1;
	ELSE
		previous_week := theWeek -1;
	END IF;
	
	RETURN QUERY
	SELECT
			pl.name AS playerName,
			pl.position AS positionName
			
	FROM
			players pl LEFT OUTER JOIN (SELECT * FROM (fantasyRosters fr JOIN fantasyTeams ft ON fr.teamID =  ft.teamID) WHERE ft.leagueID = theLeagueID AND fr.week = theWeek) ftr ON (pl.playerID = ftr.playerID)
			
	WHERE
			ftr.playerID IS NULL;
			
	END;
$$ LANGUAGE plpgsql;

SELECT * FROM getFreeAgents(2, 2)




CREATE OR REPLACE FUNCTION playerConflict() RETURNS TRIGGER AS $$
	DECLARE
		team_league INTEGER := (SELECT 	ft.leagueID
					FROM fantasyTeams ft, fantasyRosters fr
					WHERE ft.teamID = fr.teamID 
						AND ft.teamID = NEW.teamID
					LIMIT 1);	
	BEGIN
		IF
			EXISTS (SELECT fr.teamID
					FROM fantasyRosters fr, fantasyTeams ft, timePeriod tp
					WHERE fr.teamID = ft.teamID
						AND NEW.playerID = fr.playerID
						AND team_league = ft.leagueID
						AND tp.weekNumber = fr.week
						AND NEW.week = fr.week)
				LIMIT 1
			THEN
				RAISE EXCEPTION 'Player is on another team in the league';
			END IF;
			RETURN NEW;
	END;
$$ LANGUAGE plpgsql;

select pointTotal(3, 1, 1)

CREATE OR REPLACE FUNCTION pointTotal(thePlayerID int, theWeek int, theLeagueID int) 
RETURNS numeric as $$
	DECLARE
		total numeric;
	BEGIN
		IF (SELECT position FROM players WHERE players.playerID = thePlayerID) = 'D'
		THEN
			total := (((SELECT pv.pointsAllowed 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.pointsAllowed 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) + 

			((SELECT pv.dSacks 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.sacks 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) + 

			((SELECT pv.dInterceptions 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.interceptions 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) + 

			((SELECT pv.fumbleRecoveries 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT	ds.fumbleRecoveries 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) + 

			((SELECT pv.dTouchdowns 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.touchdowns 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) +

			((SELECT pv.dPassingYards 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.passingYards 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) +

			((SELECT pv.dRushingYards 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.rushingYards 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) +

			((SELECT pv.fgBlocked 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.fgBlocked 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)) +

			((SELECT pv.puntBlocked 
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ds.puntBlocked 
			FROM defenseStats ds 
			WHERE ds.week = theWeek AND ds.playerID = thePlayerID)));

		ELSEIF (SELECT position FROM players WHERE players.playerID = thePlayerID) = 'K'
		THEN
			total := (((SELECT pv.pats
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ks.pats
			FROM kickerStats ks 
			WHERE ks.week = theWeek AND ks.playerID = thePlayerID)) + 

			((SELECT pv.fgZeroToThirty
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ks.fgZeroToThirty
			FROM kickerStats ks 
			WHERE ks.week = theWeek AND ks.playerID = thePlayerID)) + 

			((SELECT pv.fgThirtyToFourty
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ks.fgThirtyToFourty
			FROM kickerStats ks 
			WHERE ks.week = theWeek AND ks.playerID = thePlayerID)) + 

			((SELECT pv.fgFourtyToFifty
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ks.fgFourtyToFifty
			FROM kickerStats ks 
			WHERE ks.week = theWeek AND ks.playerID = thePlayerID)) + 

			((SELECT pv.fgFiftyPlus
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT ks.fgFiftyPlus
			FROM kickerStats ks 
			WHERE ks.week = theWeek AND ks.playerID = thePlayerID)));

		ELSE
			total := (((SELECT pv.passAttempts
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.passAttempts
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.passCompletions
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.passCompletions
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.passYards
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.passYards
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.passTDs
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.passTDs
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.interceptions
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.interceptions
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.timesSacked
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.timesSacked
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.rushAttempts
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.rushAttempts
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.rushYards
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.rushYards
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.rushTDs
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.rushTDs
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.receptions
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.receptions
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.receptionYards
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.receptionYards
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)) + 

			((SELECT pv.receptionTDs
			FROM pointValues pv 
			WHERE pv.leagueID = theLeagueID) * 
			(SELECT os.receptionTDs
			FROM offenseStats os 
			WHERE os.week = theWeek AND os.playerID = thePlayerID)));
		END IF;
		
		RETURN total;
	END;
$$ LANGUAGE plpgsql;



CREATE TRIGGER check_conflict BEFORE INSERT ON fantasyRosters
	FOR EACH ROW EXECUTE PROCEDURE playerConflict();



INSERT INTO  users (emailAddress, firstName, lastName, thePassword) VALUES
	('edgarcodd@ibm.com', 'Edgar', 'Codd', 'relationaldatabase'),
	('jb007@mi6.uk', 'James','Bond', 'vesper'),
	('kingjames@mia.org', 'LeBron', 'James', 'not1not2not3'),
	('not2pac@deathrow.com', 'Tupac', 'Shakur', 'imstillalivehahaha'),
	('therealjohnsmith58395@gmail.com', 'John', 'Smith', 'password123'),
	('ryan@aol.com', 'Ryan', 'Bertsche', 'NTCtvYB668^789((#$');

INSERT INTO fantasyLeagues (leagueID, commissioner, leagueName) VALUES
	(1, 'edgarcodd@ibm.com', 'Monday Morning Tears'),
	(2, 'ryan@aol.com', 'The League of Ordinary Gentlemen');

INSERT INTO fantasyTeams (teamID, leagueID, teamName) VALUES
	(1, 1, 'Belicheck Yourself Before You Rex Yourself'),
	(2, 1, 'Forgetting Brandon Marshall'),
	(3, 1, 'Henne Given Sunday'),
	(4, 2, 'Red Hot Julius Peppers'),
	(5, 2, 'Im Sorry Fred Jackson'),
	(6, 2, 'Hakuna Ma-Ngata');

INSERT INTO fantasyTeamOwners (emailAddress, teamID) VALUES
	('edgarcodd@ibm.com', 1),
	('jb007@mi6.uk', 4),
	('kingjames@mia.org', 5),
	('not2pac@deathrow.com', 2),
	('therealjohnsmith58395@gmail.com', 3),
	('ryan@aol.com', 6);

INSERT INTO teams (teamName, location, abbreviation) VALUES
	('Giants', 'New York', 'NYG'),
	('Jets', 'New York', 'NYJ'),
	('Eagles', 'Philidelphia', 'PHI'),
	('Patriots', 'New England', 'NE ');

INSERT INTO players (playerID, name, jerseyNumber, position) VALUES
	(1, 'Eli Manning', 5, 'QB'),
	(2, 'Nick Foles', 8, 'QB'),
	(3, 'Tom Brady', 12, 'QB'),
	(4, 'Geno Smith', 15, 'QB'),
	(5, 'David Wilson', 28, 'RB'),
	(6, 'Chris Johnson', 21, 'RB'),
	(7, 'Stevan Ridley', 23, 'RB'),
	(8, 'LeSean McCoy', 21, 'RB'),
	(9, 'Victor Cruz', 81, 'WR'),
	(10, 'Eric Decker', 83, 'WR'),
	(11, 'Bob Smith', 89, 'WR'),
	(12, 'Saggitariutt Jeerspin', 85, 'WR'),
	(13, 'DGlester Hardunkichud', 80, 'TE'),
	(14, 'Swirvithan L Goodling-Splatt', 54, 'TE'),
	(15, 'Quatro Quatro', 57, 'TE'),
	(16, 'Beezer Twelve Washingbeard', 86, 'TE'),
	(17, 'Shakiraquan T.G.I.F. Carter', 1, 'K'),
	(18, 'Sequester Grundelplith M.D.', 5, 'K'),
	(19, 'Scoish Velociraptor Maloish', 1, 'K'),
	(20, 'T.J. A.J. R.J. Backslashinfourth V', 1, 'K'),
	(21, 'Giants', 00, 'D'),
	(22, 'Jets', 00, 'D'),
	(23, 'Patriots', 00, 'D'),
	(24, 'Eagles', 00, 'D');

INSERT INTO timePeriod (weekNumber, startDate, endDate) VALUES
	(1, '2014-09-01', '2014-09-07'),
	(2, '2014-09-08', '2014-09-14');

INSERT INTO currentRosters (playerID, teamName, timePeriod) VALUES
	(1, 'Giants', 1),
	(5, 'Giants', 1),
	(9, 'Giants', 1),
	(13, 'Giants', 1),
	(17, 'Giants', 1),
	(21, 'Giants', 1),
	(1, 'Giants', 2),
	(5, 'Giants', 2),
	(9, 'Giants', 2),
	(13, 'Giants', 2),
	(17, 'Giants', 2),
	(21, 'Giants', 2),
	(2, 'Eagles', 1),
	(8, 'Eagles', 1),
	(11, 'Eagles', 1),
	(14, 'Eagles', 1),
	(18, 'Eagles', 1),
	(24, 'Eagles', 1),
	(2, 'Eagles', 2),
	(8, 'Eagles', 2),
	(11, 'Eagles', 2),
	(14, 'Eagles', 2),
	(18, 'Eagles', 2),
	(24, 'Eagles', 2),
	(3, 'Patriots', 1),
	(7, 'Patriots', 1),
	(12, 'Patriots', 1),
	(15, 'Patriots', 1),
	(19, 'Patriots', 1),
	(23, 'Patriots', 1),
	(3, 'Patriots', 2),
	(7, 'Patriots', 2),
	(12, 'Patriots', 2),
	(15, 'Patriots', 2),
	(19, 'Patriots', 2),
	(23, 'Patriots', 2),
	(4, 'Jets', 1),
	(6, 'Jets', 1),
	(10, 'Jets', 1),
	(16, 'Jets', 1),
	(20, 'Jets', 1),
	(22, 'Jets', 1),
	(4, 'Jets', 2),
	(6, 'Jets', 2),
	(10, 'Jets', 2),
	(16, 'Jets', 2),
	(20, 'Jets', 2),
	(22, 'Jets', 2);

INSERT INTO games (awayTeam, homeTeam, week) VALUES
	('Patriots', 'Jets', 1),
	('Giants', 'Eagles', 1),
	('Jets', 'Giants', 2),
	('Eagles', 'Patriots', 2);

INSERT INTO matchups (week, awayTeamID, homeTeamID) VALUES
	(1, 1, 2),
	(1, 4, 5),
	(2, 2, 3),
	(2, 5, 6);

INSERT INTO pointValues(leagueID) VALUES
	(1),
	(2);


INSERT INTO fantasyRosters (playerID, teamID, week) VALUES
	(1, 1, 1),
	(5, 1, 1),
	(9, 1, 1),
	(13, 1, 1),
	(17, 1, 1),
	(21, 1, 1),
	(2, 2, 1),
	(6, 2, 1),
	(10, 2, 1),
	(14, 2, 1),
	(18, 2, 1),
	(22, 2, 1),
	(4, 3, 1),
	(8, 3, 1),
	(12, 3, 1),
	(16, 3, 1),
	(19, 2, 1),
	(24, 3, 1),
	(3, 1, 2),
	(5, 1, 2),
	(9, 1, 2),
	(13, 1, 2),
	(17, 1, 2),
	(21, 1, 2),
	(1, 2, 2),
	(6, 2, 2),
	(11, 2, 2),
	(14, 2, 2),
	(18, 2, 2),
	(22, 2, 2),
	(4, 3, 2),
	(8, 3, 2),
	(12, 3, 2),
	(16, 3, 2),
	(19, 3, 2),
	(24, 3, 2),
	(2, 4, 1),
	(7, 4, 1),
	(12, 4, 1),
	(13, 4, 1),
	(18, 4, 1),
	(23, 4, 1),
	(3, 5, 1),
	(8, 5, 1),
	(9, 5, 1),
	(14, 5, 1),
	(19, 5, 1),
	(24, 5, 1),
	(4, 6, 1),
	(5, 6, 1),
	(10, 6, 1),
	(15, 6, 1),
	(20, 6, 1),
	(22, 6, 1),
	(2, 4, 2),
	(7, 4, 2),
	(12, 4, 2),
	(13, 4, 2),
	(18, 4, 2),
	(23, 4, 2),
	(3, 5, 2),
	(8, 5, 2),
	(9, 5, 2),
	(14, 5, 2),
	(19, 5, 2),
	(24, 5, 2),
	(4, 6, 2),
	(5, 6, 2),
	(10, 6, 2),
	(15, 6, 2),
	(20, 6, 2),
	(22, 6, 2);

INSERT INTO defenseStats (awayTeam, homeTeam, week, playerID, pointsAllowed, 
						sacks, interceptions, fumbleRecoveries, touchdowns, 
						passingYards, rushingYards, fgBlocked, puntBlocked) VALUES

	('Patriots', 'Jets', 1, 22, 14, 3, 2, 0, 0, 386, 79, 0, 0),
	('Patriots', 'Jets', 1, 23, 21, 2, 1, 1, 1, 287, 190, 1, 0),
	('Giants', 'Eagles', 1, 21, 10, 5, 1, 0, 1, 300, 130, 0, 0),
	('Giants', 'Eagles', 1, 24, 24, 1, 0, 1, 0, 400, 190, 0, 0),
	('Jets', 'Giants', 2, 22, 30, 2, 2, 0, 0, 550, 230, 0, 0),
	('Jets', 'Giants', 2, 21, 14, 6, 1, 1, 1, 249, 167, 1, 0),
	('Eagles', 'Patriots', 2, 24, 29, 0, 0, 0, 0, 390, 123, 0, 0),
	('Eagles', 'Patriots', 2, 23, 9, 2, 1, 0, 1, 200, 111, 0, 0);

INSERT INTO offenseStats (awayTeam, homeTeam, week, playerID, passAttempts, 
						passCompletions, passYards, passTDs, interceptions, 
						timesSacked, rushAttempts, rushYards, rushTDs, 
						receptions, receptionYards, receptionTDs) VALUES

	('Patriots', 'Jets', 1, 3, 45, 30, 349, 3, 1, 2, 0, 0, 0, 0, 0, 0),
	('Patriots', 'Jets', 1, 7, 0, 0, 0, 0, 0, 0, 25, 120, 2, 3, 23, 0),
	('Patriots', 'Jets', 1, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 123, 2),
	('Patriots', 'Jets', 1, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 65, 0),
	('Patriots', 'Jets', 1, 4, 31, 19, 230, 1, 2, 2, 4, 41, 0, 0, 0, 0),
	('Patriots', 'Jets', 1, 6, 0, 0, 0, 0, 0, 0, 23, 98, 1, 2, 23, 0),
	('Patriots', 'Jets', 1, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 134, 1),
	('Patriots', 'Jets', 1, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 16, 0),
	('Giants', 'Eagles', 1, 1, 35, 25, 300, 3, 1, 2, 0, 0, 0, 0, 0, 0),
	('Giants', 'Eagles', 1, 5, 0, 0, 0, 0, 0, 0, 15, 101, 1, 3, 32, 0),
	('Giants', 'Eagles', 1, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 121, 1),
	('Giants', 'Eagles', 1, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 45, 1),
	('Giants', 'Eagles', 1, 2, 34, 21, 299, 1, 2, 4, 1, 3, 0, 0, 0, 0),
	('Giants', 'Eagles', 1, 8, 0, 0, 0, 0, 0, 0, 30, 143, 2, 7, 33, 0),
	('Giants', 'Eagles', 1, 11, 1, 1, 48, 1, 0, 0, 0, 0, 0, 3, 43, 0),
	('Giants', 'Eagles', 1, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 30, 1),
	('Jets', 'Giants', 2, 4, 25, 12, 190, 0, 2, 7, 2, -4, 0, 0, 0, 0),
	('Jets', 'Giants', 2, 6, 0, 0, 0, 0, 0, 0, 15, 80, 0, 2, 21, 0),
	('Jets', 'Giants', 2, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 32, 0),
	('Jets', 'Giants', 2, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 31, 0),
	('Jets', 'Giants', 2, 1, 50, 40, 500, 3, 1, 2, 0, 0, 0, 0, 0, 0),
	('Jets', 'Giants', 2, 5, 0, 0, 0, 0, 0, 0, 10, 140, 2, 2, 31, 0),
	('Jets', 'Giants', 2, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 200, 3),
	('Jets', 'Giants', 2, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 100, 1),
	('Eagles', 'Patriots', 2, 2, 32, 20, 240, 2, 1, 3, 0, 0, 0, 0, 0, 0),
	('Eagles', 'Patriots', 2, 8, 0, 0, 0, 0, 0, 0, 13, 111, 1, 0, 0, 0),
	('Eagles', 'Patriots', 2, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 23, 0),
	('Eagles', 'Patriots', 2, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1),
	('Eagles', 'Patriots', 2, 3, 45, 32, 444, 4, 0, 3, 0, 0, 0, 0, 0, 0),
	('Eagles', 'Patriots', 2, 7, 0, 0, 0, 0, 0, 0, 5, 23, 1, 8, 121, 1),
	('Eagles', 'Patriots', 2, 12, 0, 0, 0, 0, 0, 0, 1, 23, 0, 12, 157, 2),
	('Eagles', 'Patriots', 2, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 200, 2); 

INSERT INTO kickerStats (awayTeam, homeTeam, week ,playerID, pats,
						fgZeroToThirty, fgThirtyToFourty, 
						fgFourtyToFifty, fgFiftyPlus) VALUES
	('Patriots', 'Jets', 1, 19, 3, 0, 1, 0, 0),
	('Patriots', 'Jets', 1, 20, 2, 1, 1, 0, 0),
	('Giants', 'Eagles', 1, 17, 4, 0, 0, 0, 2),
	('Giants', 'Eagles', 1, 18, 2, 1, 0, 0, 0),
	('Jets', 'Giants', 2, 20, 0, 3, 0, 0, 0),
	('Jets', 'Giants', 2, 17, 4, 0, 0, 0, 1),
	('Eagles', 'Patriots', 2, 18, 2, 1, 0, 0, 0),
	('Eagles', 'Patriots', 2, 19, 6, 0, 0, 2, 0);



